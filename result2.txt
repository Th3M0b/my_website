# VIP Banko Simuliacija

Šis projektas simuliuoja banko klientų aptarnavimo sistemą, kurioje yra du klientų tipai: **įprasti** ir **VIP**. Simuliacija leidžia palyginti du skirtingus aptarnavimo modelius ir pateikia statistinius rezultatus.

## 🧠 Simuliacijos Režimai

### 1. `PROCESS_1`: Bendroji prioriteto eilė
- Visi darbuotojai aptarnauja iš **vienos prioritetinės eilės**.
- VIP klientai turi aukštesnį prioritetą nei įprasti.

### 2. `PROCESS_2`: Atskiros eilės
- Darbuotojai yra suskirstyti:
  - Vieni aptarnauja **įprastus** klientus.
  - Kiti – **VIP** klientus.
- Naudojamos dvi atskiros **FIFO** eilės.

## ⚙️ Parametrai

| Parametras        | Aprašymas                                           |
|-------------------|-----------------------------------------------------|
| `total_clerks`    | Viso darbuotojų (naudojama PROCESS_1)              |
| `normal_clerks`   | Įprastų klientų darbuotojų skaičius (PROCESS_2)    |
| `vip_clerks`      | VIP klientų darbuotojų skaičius (PROCESS_2)        |
| `p_normal`        | Tikimybė, kad atėjęs klientas bus įprastas         |
| `t_normal`        | Vidutinis įprasto kliento aptarnavimo laikas       |
| `t_vip`           | Vidutinis VIP kliento aptarnavimo laikas           |

## 📊 Rezultatai

Grąžinami tokie rodikliai:

- `total_downtime` – bendras darbuotojų nedarbo laikas
- `total_overtime` – bendras viršvalandžių laikas
- `avg_normal_wait` – vidutinis laukimo laikas įprastiems klientams
- `max_vip_wait` – maksimalus laukimo laikas VIP klientui

## 🧪 Paleidimas

Projektas parašytas C kalba.

1. Kompiliuokite su savo mėgstamu kompiliatoriumi (`gcc`, `clang`, ir pan.).
2. Įsitikinkite, kad turite failus:
   - `VIP_bank.h`
   - `VIP_bank.c`
   - `queue.h` / `queue.c`
   - `priorityQueue.h` / `priorityQueue.c`
3. Kviečiama funkcija:  
   ```c
   SimulationResults runSimulation(ProcessType process, SimulationParams params);
